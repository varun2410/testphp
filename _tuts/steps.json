{
    "steps": [
        {
            "id": "start",
            "name": "start",
            "description": null
        },
        {
            "id": "installation",
            "name": "Installation",
            "description": null
        },
        {
            "id": "first-test",
            "name": "First test",
            "description": null
        },
        {
            "id": "first-test-remove",
            "name": "First test - remove",
            "description": null
        },
        {
            "id": "setget-testing-initial-length-test",
            "name": "SetGet testing: initial length test",
            "description": null
        },
        {
            "id": "setget-testing-add-entity-with-methods",
            "name": "SetGet testing: add entity with methods",
            "description": null
        },
        {
            "id": "setget-testing-adding-another-test-for-same-feature",
            "name": "SetGet testing: adding another test for same feature",
            "description": null
        },
        {
            "id": "setget-testing-add-specification-test",
            "name": "SetGet testing: add specification test",
            "description": null
        },
        {
            "id": "setget-testing-add-hard-coded-specification-code",
            "name": "SetGet testing: add hard coded specification code",
            "description": null
        },
        {
            "id": "setget-testing-add-additional-specification-test",
            "name": "SetGet testing: add additional specification test",
            "description": null
        },
        {
            "id": "setget-testing-add-specification-code",
            "name": "SetGet testing: add specification code",
            "description": null
        },
        {
            "id": "setget-testing-minor-refactor",
            "name": "SetGet testing: Minor refactor",
            "description": null
        },
        {
            "id": "setget-testing-indirect-add-factory-test",
            "name": "SetGet testing: indirect - add factory test",
            "description": null
        },
        {
            "id": "setget-testing-indirect-add-factory-code",
            "name": "SetGet testing: indirect - add factory code",
            "description": null
        },
        {
            "id": "setget-testing-refactoring",
            "name": "SetGet testing: refactoring",
            "description": null
        },
        {
            "id": "setget-testing-fixing-failed-refactoring",
            "name": "SetGet testing: fixing failed refactoring",
            "description": null
        },
        {
            "id": "marking-a-test-as-incomplete",
            "name": "Marking a test as incomplete",
            "description": null
        },
        {
            "id": "marking-a-test-as-skipped",
            "name": "Marking a test as skipped",
            "description": null
        },
        {
            "id": "data-provider-test",
            "name": "Data provider: test",
            "description": null
        },
        {
            "id": "data-provider-add-data-provider",
            "name": "Data provider: Add data provider",
            "description": null
        },
        {
            "id": "data-provider-naming-test-in-provider",
            "name": "Data provider: Naming test in provider",
            "description": null
        },
        {
            "id": "data-provider-initial-specification-method",
            "name": "Data provider: initial specification method",
            "description": null
        },
        {
            "id": "data-provider-pass-large-assertion-in-specification-method",
            "name": "Data provider: pass large assertion in specification method",
            "description": null
        },
        {
            "id": "data-provider-pass-carnivorous-assertion-in-specification-method",
            "name": "Data provider: pass carnivorous assertion in specification method",
            "description": null
        },
        {
            "id": "data-provider-add-test-for-huge-dinosaur-from-specification",
            "name": "Data provider: add test for huge dinosaur from specification",
            "description": null
        },
        {
            "id": "data-provider-add-code-for-growing-huge-dinosaurs",
            "name": "Data provider: add code for growing huge dinosaurs ",
            "description": null
        },
        {
            "id": "data-provider-add-code-to-pass-remaining-huge-dinosaur-dataset",
            "name": "Data provider: add code to pass remaining huge dinosaur dataset",
            "description": null
        },
        {
            "id": "data-provider-refactor-specification-method-code",
            "name": "Data provider: refactor specification method code",
            "description": null
        },
        {
            "id": "enclosure-empty-by-default",
            "name": "Enclosure: empty by default",
            "description": null
        },
        {
            "id": "enclosure-use-assertempty",
            "name": "Enclosure: Use assertEmpty",
            "description": null
        },
        {
            "id": "enclosure-add-annotations",
            "name": "Enclosure: Add annotations",
            "description": null
        },
        {
            "id": "enclosure-testing-with-dependencies-on-other-objects",
            "name": "Enclosure: testing with dependencies on other objects",
            "description": null
        },
        {
            "id": "exceptions-test-expecting-exception",
            "name": "Exceptions: test expecting exception",
            "description": null
        },
        {
            "id": "exceptions-code-throwing-exception",
            "name": "Exceptions: code throwing exception",
            "description": null
        },
        {
            "id": "exceptions-test-with-annotations",
            "name": "Exceptions: test with annotations",
            "description": null
        },
        {
            "id": "exceptions-test-with-message",
            "name": "Exceptions: test with message",
            "description": null
        },
        {
            "id": "exceptions-throw-exception-with-message",
            "name": "Exceptions: throw exception with message",
            "description": null
        },
        {
            "id": "exceptions-fix-broken-tests",
            "name": "Exceptions: fix broken tests",
            "description": null
        },
        {
            "id": "test-doubles-refactoring-into-dinosaurlengthdeterminator",
            "name": "Test doubles: Refactoring into DinosaurLengthDeterminator",
            "description": null
        },
        {
            "id": "test-doubles-di-determinator-into-factory",
            "name": "Test doubles: DI determinator into factory",
            "description": null
        },
        {
            "id": "test-doubles-mock-determinator",
            "name": "Test doubles: Mock determinator",
            "description": null
        },
        {
            "id": "test-doubles-stub-getlengthfromspecification",
            "name": "Test doubles: stub getLengthFromSpecification()",
            "description": null
        },
        {
            "id": "test-doubles-make-code-work-again",
            "name": "Test doubles: Make code work again",
            "description": null
        },
        {
            "id": "test-doubles-expect-with",
            "name": "Test doubles: expect() & with()",
            "description": null
        },
        {
            "id": "test-doubles-fix-broken-code",
            "name": "Test doubles: Fix broken code",
            "description": null
        },
        {
            "id": "test-doubles-add-test-with-a-mock",
            "name": "Test doubles: add test with a mock",
            "description": null
        },
        {
            "id": "test-doubles-mock-2-args",
            "name": "Test doubles: Mock 2 args",
            "description": null
        },
        {
            "id": "test-doubles-add-expect-fix-loop",
            "name": "Test doubles: add expect & fix loop",
            "description": null
        },
        {
            "id": "test-doubles-dump-dinosaur-collection",
            "name": "Test doubles: Dump Dinosaur collection",
            "description": null
        },
        {
            "id": "test-doubles-add-willreturn-dino",
            "name": "Test doubles: Add willReturn Dino",
            "description": null
        },
        {
            "id": "test-doubles-fulfill-persist-method-expectation-of-mock",
            "name": "Test doubles: fulfill persist method expectation of mock",
            "description": null
        },
        {
            "id": "test-doubles-fulfill-flush-method-expectation-of-mock",
            "name": "Test doubles: fulfill flush method expectation of mock",
            "description": null
        },
        {
            "id": "test-doubles-mocking-with-prophecy",
            "name": "Test doubles: mocking with prophecy",
            "description": null
        },
        {
            "id": "test-doubles-propechy-mock-em",
            "name": "Test doubles: propechy mock em",
            "description": null
        },
        {
            "id": "test-doubles-prophecy-mock-flush",
            "name": "Test doubles: prophecy mock flush",
            "description": null
        },
        {
            "id": "test-doubles-prophecy-mock-dino-factory",
            "name": "Test doubles: prophecy mock dino factory",
            "description": null
        },
        {
            "id": "test-doubles-prophecy-mock-growfromspecification",
            "name": "Test doubles: prophecy mock growFromSpecification",
            "description": null
        },
        {
            "id": "test-doubles-prophecy-finish-test",
            "name": "Test doubles: prophecy finish test",
            "description": null
        },
        {
            "id": "test-doubles-show-prophecy-failure",
            "name": "Test doubles: Show prophecy failure",
            "description": null
        },
        {
            "id": "test-doubles-fix-code",
            "name": "Test doubles: Fix code",
            "description": null
        },
        {
            "id": "introduction-to-cli-configuration",
            "name": "Introduction to CLI & configuration",
            "description": null
        },
        {
            "id": "integration-tests-prepare-database",
            "name": "Integration tests: prepare database",
            "description": null
        },
        {
            "id": "integration-tests-start-test",
            "name": "Integration tests: start test",
            "description": null
        },
        {
            "id": "integration-tests-adding-service-alias",
            "name": "Integration tests: Adding service alias",
            "description": null
        },
        {
            "id": "integration-tests-finish-basic-test",
            "name": "Integration tests: finish basic test",
            "description": null
        },
        {
            "id": "integration-tests-use-separate-database-for-testing",
            "name": "Integration tests: use separate database for testing",
            "description": null
        },
        {
            "id": "integration-tests-truncate-tables-before-tests",
            "name": "Integration tests: truncate tables before tests",
            "description": null
        },
        {
            "id": "integration-tests-ormpurger",
            "name": "Integration tests: ORMPurger",
            "description": null
        },
        {
            "id": "integration-tests-partial-mocking",
            "name": "Integration tests: Partial-mocking",
            "description": null
        },
        {
            "id": "integration-tests-use-returnvaluecallback",
            "name": "Integration tests: use returnValueCallback",
            "description": null
        },
        {
            "id": "functional-tests-intro",
            "name": "Functional tests: intro",
            "description": null
        },
        {
            "id": "functional-tests-add-test-for-enclosures",
            "name": "Functional tests: add test for enclosures",
            "description": null
        },
        {
            "id": "functional-tests-load-fixtures",
            "name": "Functional tests: load fixtures",
            "description": null
        },
        {
            "id": "functional-tests-write-test-for-alarm-button",
            "name": "Functional tests: write test for alarm button",
            "description": null
        },
        {
            "id": "functional-tests-empty",
            "name": "Functional tests: EMPTY",
            "description": null
        },
        {
            "id": "functional-tests-add-alarm-button",
            "name": "Functional tests: add alarm button",
            "description": null
        },
        {
            "id": "functional-tests-write-a-form-submission-test",
            "name": "Functional tests: write a form submission test",
            "description": null
        },
        {
            "id": "functional-tests-form-test-follow-redirect",
            "name": "Functional tests: form test follow redirect",
            "description": null
        },
        {
            "id": "functional-tests-create-form-object",
            "name": "Functional tests: create form object",
            "description": null
        },
        {
            "id": "functional-tests-fulfill-form",
            "name": "Functional tests: fulfill form",
            "description": null
        },
        {
            "id": "functional-tests-form-submit-assertions",
            "name": "Functional tests: form submit assertions",
            "description": null
        },
        {
            "id": "functional-tests-add-form-to-grow-from-specification",
            "name": "Functional tests: add form to grow from specification",
            "description": null
        },
        {
            "id": "functional-tests-write-a-failing-test-for-alarm-command",
            "name": "Functional tests: write a failing test for alarm command",
            "description": null
        },
        {
            "id": "functional-tests-write-option-code-in-alarm-command",
            "name": "Functional tests: write option code in alarm command",
            "description": null
        },
        {
            "id": "ci-initial-config",
            "name": "CI: initial config",
            "description": null
        },
        {
            "id": "ci-empty-step",
            "name": "CI: EMPTY STEP",
            "description": null
        },
        {
            "id": "ci-change-phpunit-command",
            "name": "CI: Change phpunit command",
            "description": null
        },
        {
            "id": "ci-change-image",
            "name": "CI: Change image",
            "description": null
        },
        {
            "id": "ci-add-database",
            "name": "CI: add database",
            "description": null
        },
        {
            "id": "ci-storing-artifacts",
            "name": "CI: storing artifacts",
            "description": null
        }
    ],
    "sha": "7ba2731b977d4d0b3ee35b52c9c41f87dd81e06e"
}
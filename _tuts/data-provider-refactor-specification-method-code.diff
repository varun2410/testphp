diff --git a/src/AppBundle/Factory/DinosaurFactory.php b/src/AppBundle/Factory/DinosaurFactory.php
index e06fd88..ceffce5 100644
--- a/src/AppBundle/Factory/DinosaurFactory.php
+++ b/src/AppBundle/Factory/DinosaurFactory.php
@@ -15,25 +15,9 @@ class DinosaurFactory
     {
         // defaults
         $codeName = 'InG-' . random_int(1, 99999);
-        $length = random_int(1, Dinosaur::LARGE - 1);
+        $length = $this->getLengthFromSpecification($specification);
         $isCarnivorous = false;
 
-        if (stripos($specification, 'huge') !== false) {
-            $length = random_int(Dinosaur::HUGE, 100);
-        }
-
-        if (stripos($specification, 'OMG') !== false) {
-            $length = random_int(Dinosaur::HUGE, 100);
-        }
-
-        if (strpos($specification, 'ðŸ˜±') !== false) {
-            $length = random_int(Dinosaur::HUGE, 100);
-        }
-
-        if (stripos($specification, 'large') !== false) {
-            $length = random_int(Dinosaur::LARGE, Dinosaur::HUGE - 1);
-        }
-
         if (stripos($specification, 'carnivorous') !== false) {
             $isCarnivorous = true;
         }
@@ -51,4 +35,29 @@ class DinosaurFactory
 
         return $dinosaur;
     }
+
+    private function getLengthFromSpecification(string $specification): int
+    {
+        $availableLengths = [
+            'huge' => ['min' => Dinosaur::HUGE, 'max' => 100],
+            'omg' => ['min' => Dinosaur::HUGE, 'max' => 100],
+            'ðŸ˜±' => ['min' => Dinosaur::HUGE, 'max' => 100],
+            'large' => ['min' => Dinosaur::LARGE, 'max' => Dinosaur::HUGE - 1],
+        ];
+        $minLength = 1;
+        $maxLength = Dinosaur::LARGE - 1;
+
+        foreach (explode(' ', $specification) as $keyword) {
+            $keyword = strtolower($keyword);
+
+            if (array_key_exists($keyword, $availableLengths)) {
+                $minLength = $availableLengths[$keyword]['min'];
+                $maxLength = $availableLengths[$keyword]['max'];
+
+                break;
+            }
+        }
+
+        return random_int($minLength, $maxLength);
+    }
 }
